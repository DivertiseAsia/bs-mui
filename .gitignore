# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# BuckleScript
*~
_build
_esy
*.obj
*.out
*.compile
*.native
*.byte
*.cmo
*.annot
*.cmi
*.cmx
*.cmt
*.cmti
*.cma
*.a
*.cmxa
*.mj
*.bak
*.swp
*.swo

*.jsx
*.lambda
*.rawlambda
*.s
*.o
*.lam
*.0.js
*#
.#*
*.cmj
*.zip
*.patch
*.mlast
*.mliast
# special file

.idea
.DS_Store
.bsb.lock
.merlin

node_modules
oxml
test.json
jscomp/pre_load.js
boot
*.dump
*.g.js
ppx_tools/
vendor/ocaml/stdlib/target_camlheader
vendor/ocaml/stdlib/target_camlheaderd
reason/
man/
lib/ocaml
bin/*
jscomp/bin/*.exe
odoc_gen/*.cmxs

# for npm publish
*.exe

!bin/bspack
!/bin/bsb
!/bin/bsc

# This is intentional
# so that `npm install && npm intall -g .`
# the second install would use the cached ninja.exe (instead of being ignored)
#
!bin/bsrefmt


#ninja
.ninja_log
.ninja_deps
.bsdeps
.bs_dir_cache

.bsbuild
lib/prebuilt.ninja
lib/release.ninja
lib/build.ninja
lib/copy.ninja
jscomp/release.ninja
jscomp/build.ninja
jscomp/compiler.ninja
jscomp/runtime/build.ninja
jscomp/others/build.ninja
jscomp/stdlib-406/build.ninja

jscomp/compilerEnv.ninja
env.ninja
jscomp/cppoVendor.ninja
jscomp/cppoEnv.ninja
jscomp/bin/bsb
jscomp/bin/bsc
lib/bs
lib/js/jscomp/test
jscomp/build_tests/*/lib/
#ignore temporary directory
*.goog.js
*.jsoo.js
*.so
bin/ninja.exe
tmp/
jscomp/ext/hash_set.ml
jscomp/ext/hash_set_poly.ml
jscomp/ext/hash.ml
jscomp/ext/hash_set_ident.ml
jscomp/ext/hash_ident.ml
jscomp/ext/map_ident.ml
jscomp/ext/set_ident.ml
jscomp/ext/hash_set_int.ml
jscomp/ext/hash_int.ml
jscomp/ext/map_int.ml
jscomp/ext/vec_int.ml
jscomp/ext/ordered_hash_map_local_ident.ml
jscomp/ext/ordered_hash_set_string.ml
jscomp/ext/vec.ml
jscomp/ext/set_int.ml
jscomp/ext/hash_set_string.ml
jscomp/ext/hash_string.ml
jscomp/ext/map_string.ml
jscomp/ext/set_string.ml
jscomp/syntax/reactjs_jsx_ppx_v2.ml
jscomp/syntax/reactjs_jsx_ppx_v3.ml
jscomp/outcome_printer/tweaked_reason_oprint.ml
jscomp/outcome_printer/reason_syntax_util.ml
jscomp/outcome_printer/reason_syntax_util.mli
jscomp/bin/all_ounit_tests.ml
native/
vendor/ocaml
jscomp/.lsp
.vscode/launch.json
tracing*.json
darwin/bsc

lib/*

.npmrc